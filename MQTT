#include <ESP8266WiFi.h>
#include <PubSubClient.h>

#include <SPI.h> //for SPI communication
#include <mcp2515.h> // for can communication
struct can_frame canMsg;
MCP2515 mcp2515(10); //SPI CS pin 10 

const char* ssid = "SLT-4G-C74A";
const char* password =  "222864Y077N";
const char* mqtt_server = "broker.mqtt-dashboard.com";

WiFiClient espClient;
PubSubClient client(espClient);

String x = "R";

void setup_wifi() {

  delay(10);
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);

  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  Serial.println("");
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());
}

void reconnect() {
  while (!client.connected()) {
    Serial.print("Attempting MQTT connection...");
    String clientId = "ESP8266Client-";
    clientId += String(random(0xffff), HEX);
    
    if (client.connect(clientId.c_str())) 
    {
      Serial.println("connected");
    } else 
    {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" try again in 5 seconds");
      delay(5000);
    }
  }
}

void setup() 
{
  Serial.begin(115200);
  setup_wifi();
  client.setServer(mqtt_server, 1883);

  mcp2515.reset();
  mcp2515.setBitrate(CAN_125KBPS); //set CAN speed
  mcp2515.setNormalMode(); // CAN state in normel mode
}

void loop() 
{
    canMsg.can_id  = 0x0F6; // just for test
    canMsg.can_dlc = 4; // just for test
    canMsg.data[0] = 0;
    canMsg.data[1] = 0;
    canMsg.data[2] = 5;
    canMsg.data[3] = 8;
    
   if (!client.connected()) 
    {
      reconnect();
    }
      client.loop();



   for (int i = 0; i<canMsg.can_dlc; i++)  
    {  
      x = x + canMsg.data[i];
    }
      //int num = x;
//      char cstr[16];
//      itoa(x, cstr, 10);
//      Serial.println(cstr); 

    int str_len = x.length() + 1; 
    char data_set[str_len];
    x.toCharArray(data_set, str_len);
  
    client.publish("SLT_project_zero", data_set);
    delay(500);

   x = "R"; 
}
